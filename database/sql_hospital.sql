-- Check if exist DATABASE

DROP DATABASE IF EXISTS HOSPITAL;
CREATE DATABASE IF NOT EXISTS HOSPITAL;
USE HOSPITAL;

-- Create TABLE 
CREATE TABLE HOSPITAL.PATIENT 
(
    p_code VARCHAR(12) 				NOT NULL,
    p_first_name VARCHAR (15) 		NOT NULL,
    p_last_name VARCHAR (15) 		NOT NULL,
    p_address VARCHAR (30),
    p_gender CHAR(1),
    discharge_date DATE,
    p_phone_number VARCHAR (15),
    p_dob DATE,
    PRIMARY KEY (p_code)
);

CREATE TABLE HOSPITAL.EXAMINATION 
(
    examination_id VARCHAR(10) 		NOT NULL,
    diagnosis VARCHAR (50),
    current_ex_date DATE,
    next_ex_date DATE,
    fee DECIMAL(10,2),
    PRIMARY KEY (examination_id)
);

CREATE TABLE HOSPITAL.PROVIDER 
(
    pr_number VARCHAR (10) 			NOT NULL,
    pr_phone VARCHAR (15),
    pr_address VARCHAR (30),
    pr_name VARCHAR (30), --
    PRIMARY KEY (pr_number)
);

CREATE TABLE HOSPITAL.DOCTOR
(
    doctor_code VARCHAR (10) 		NOT NULL,
    p_code VARCHAR (12) 			NOT NULL,
    PRIMARY KEY (doctor_code)
    -- FOREIGN KEY (p_code) REFERENCES HOSPITAL.PATIENT (p_code)
);

CREATE TABLE HOSPITAL.DEAN
(
    dean_code VARCHAR (10) 			NOT NULL,
    PRIMARY KEY (dean_code)
    -- FOREIGN KEY (dean_code) REFERENCES HOSPITAL.DOCTOR (doctor_code),
    -- FOREIGN KEY (dept_code) REFERENCES HOSPITAL.DEPARTMENT (dept_code)
);

CREATE TABLE HOSPITAL.DEPARTMENT
(
    dept_code VARCHAR (10) 			NOT NULL,
    title VARCHAR (15),
    dean_code VARCHAR (10) 			NOT NULL,
    PRIMARY KEY (dept_code)
);

CREATE TABLE hospital.EMPLOYEE
(
    e_code VARCHAR (10) 			NOT NULL,
    e_first_name VARCHAR (15) 		NOT NULL,
    e_last_name VARCHAR (15) 		NOT NULL,
    e_dob DATE,
    e_address VARCHAR (30),
    name_specialty VARCHAR (15),
    degree_year INT,
    e_gender CHAR(1),
    start_date DATE,
    dept_code VARCHAR (10) 			NOT NULL,
    PRIMARY KEY (e_code)
    -- FOREIGN KEY (dept_code) REFERENCES HOSPITAL.DEPARTMENT (dept_code)
);

CREATE TABLE HOSPITAL.NURSE
(
    nurse_code VARCHAR (10) 		NOT NULL,
    PRIMARY KEY (nurse_code)
    -- FOREIGN KEY (nurse_code) REFERENCES HOSPITAL.EMPLOYEE (e_code)
);

CREATE TABLE HOSPITAL.PHONE_NUMBER
(
    phone_number VARCHAR (15) 		NOT NULL,
    e_code VARCHAR (10) 			NOT NULL,
    PRIMARY KEY (phone_number, e_code)
    -- FOREIGN KEY (e_code) REFERENCES HOSPITAL.EMPLOYEE (e_code)
);

CREATE TABLE HOSPITAL.IN_PATIENT
(
    ip_code VARCHAR (12) 			NOT NULL,
    fee DECIMAL (10,2),
    diagnosis VARCHAR (50),
    date_of_discharge DATE,
    sickroom INT,
    date_of_admission DATE,
    nurse_code VARCHAR (10) 		NOT NULL,
    PRIMARY KEY (ip_code),
    -- FOREIGN KEY (ip_code) REFERENCES HOSPITAL.PATIENT (p_code),
    -- FOREIGN KEY (nurse_code) REFERENCES HOSPITAL.NURSE (nurse_code),
    CHECK (ip_code LIKE 'IP%')
);

CREATE TABLE HOSPITAL.OUT_PATIENT 
(
    op_code VARCHAR (12) 			NOT NULL,
    PRIMARY KEY (op_code),
    -- FOREIGN KEY (op_code) REFERENCES HOSPITAL.PATIENT (p_code),
    CHECK (op_code LIKE 'OP%')
);

CREATE TABLE HOSPITAL.EXAMINES 
(
    examination_id VARCHAR (10) 	NOT NULL,
    op_code VARCHAR (12) 			NOT NULL,
    doctor_code VARCHAR (10) 		NOT NULL,
    PRIMARY KEY (examination_id, op_code, doctor_code)
    -- FOREIGN KEY (examination_id) REFERENCES HOSPITAL.EXAMINATION (examination_id),
    -- FOREIGN KEY (op_code) REFERENCES HOSPITAL.OUT_PATIENT (op_code),
    -- FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code)
);

CREATE TABLE HOSPITAL.TREATMENT 
(
    treatment_id VARCHAR (10) 		NOT NULL,
    result VARCHAR (15),
    start_date DATE,
    end_date DATE,
    doctor_code VARCHAR (10) 		NOT NULL,
    PRIMARY KEY (treatment_id)
    -- FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code)
);

CREATE TABLE HOSPITAL.TREATS 
(
    doctor_code VARCHAR (10) 		NOT NULL,
    p_code VARCHAR (12) 			NOT NULL,
    treatment_id VARCHAR (10) 		NOT NULL,
    PRIMARY KEY (doctor_code, p_code, treatment_id)
    -- FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code),
    -- FOREIGN KEY (p_code) REFERENCES HOSPITAL.PATIENT (p_code),
    -- FOREIGN KEY (treatment_id) REFERENCES HOSPITAL.TREATMENT (treatment_id)
);

CREATE TABLE HOSPITAL.MEDICATION 
(
    m_code VARCHAR(10) 				NOT NULL,
    m_name VARCHAR(15) 				NOT NULL,
    expiration_date DATE			NOT NULL,
    price DECIMAL (10,2) 			NOT NULL,
    examination_id VARCHAR (10) 	NOT NULL,
    PRIMARY KEY (m_code) 
    -- FOREIGN KEY (examination_id) REFERENCES HOSPITAL.EXAMINATION (examination_id)
);

CREATE TABLE HOSPITAL.MED_EFFECT
(
    m_code VARCHAR (10) 			NOT NULL,
    effect VARCHAR (15),
    PRIMARY KEY (m_code, effect)
    -- FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code)
);

CREATE TABLE HOSPITAL.EXPIRED_MEDICATION
(
    m_code VARCHAR (10) 			NOT NULL,
    expiration_date DATE			NOT NULL,
    curr_date DATE,
    PRIMARY KEY (m_code),
    -- FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code),
    CHECK (m_code <= curr_date)
);

CREATE TABLE HOSPITAL.PROVIDES
(
    m_code VARCHAR (10) 			NOT NULL,
    pr_number VARCHAR (10) 			NOT NULL,
    imported_date DATE,
    quantity INT,
    PRIMARY KEY (pr_number, m_code)
    -- FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code),
    -- FOREIGN KEY (pr_number) REFERENCES HOSPITAL.PROVIDER (pr_number)
);

CREATE TABLE HOSPITAL.TREATMENT_USES
(
    treatment_id VARCHAR (10) 		NOT NULL,
    m_code VARCHAR (10)				NOT NULL,
    PRIMARY KEY (m_code, treatment_id)
    -- FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code),
    -- FOREIGN KEY (treatment_id) REFERENCES HOSPITAL.TREATMENT (treatment_id)
);



-- Alter TABLE for adding foreign key
ALTER TABLE HOSPITAL.DEPARTMENT
ADD FOREIGN KEY (dean_code) REFERENCES HOSPITAL.DEAN (dean_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.DOCTOR
ADD FOREIGN KEY (p_code) REFERENCES HOSPITAL.PATIENT (p_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.DEAN
ADD FOREIGN KEY (dean_code) REFERENCES HOSPITAL.DOCTOR (doctor_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.EMPLOYEE
ADD FOREIGN KEY (dept_code) REFERENCES HOSPITAL.DEPARTMENT (dept_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.NURSE
ADD FOREIGN KEY (nurse_code) REFERENCES HOSPITAL.EMPLOYEE (e_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.PHONE_NUMBER
ADD FOREIGN KEY (e_code) REFERENCES HOSPITAL.EMPLOYEE (e_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.IN_PATIENT
ADD FOREIGN KEY (ip_code) REFERENCES HOSPITAL.PATIENT (p_code) ON DELETE CASCADE,
ADD FOREIGN KEY (nurse_code) REFERENCES HOSPITAL.NURSE (nurse_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.OUT_PATIENT
ADD FOREIGN KEY (op_code) REFERENCES HOSPITAL.PATIENT (p_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.EXAMINES
ADD FOREIGN KEY (examination_id) REFERENCES HOSPITAL.EXAMINATION (examination_id) ON DELETE CASCADE,
ADD FOREIGN KEY (op_code) REFERENCES HOSPITAL.OUT_PATIENT (op_code) ON DELETE CASCADE,
ADD FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.TREATMENT
ADD FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.TREATS
ADD FOREIGN KEY (doctor_code) REFERENCES HOSPITAL.DOCTOR (doctor_code) ON DELETE CASCADE,
ADD FOREIGN KEY (p_code) REFERENCES HOSPITAL.PATIENT (p_code) ON DELETE CASCADE,
ADD FOREIGN KEY (treatment_id) REFERENCES HOSPITAL.TREATMENT (treatment_id) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.MEDICATION
ADD FOREIGN KEY (examination_id) REFERENCES HOSPITAL.EXAMINATION (examination_id) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.MED_EFFECT
ADD FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.EXPIRED_MEDICATION
ADD FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code) ON DELETE CASCADE;

ALTER TABLE HOSPITAL.PROVIDES
ADD FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code) ON DELETE CASCADE,
ADD FOREIGN KEY (pr_number) REFERENCES HOSPITAL.PROVIDER (pr_number) ON DELETE CASCADE;

ALTER TABLE TREATMENT_USES
ADD FOREIGN KEY (m_code) REFERENCES HOSPITAL.MEDICATION (m_code) ON DELETE CASCADE,
ADD FOREIGN KEY (treatment_id) REFERENCES HOSPITAL.TREATMENT (treatment_id) ON DELETE CASCADE;

